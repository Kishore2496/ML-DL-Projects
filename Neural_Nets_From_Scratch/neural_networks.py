# -*- coding: utf-8 -*-
"""Neural_Networks.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZSZpiyj9UPigfuFBVmbS6OrWEya5-V6M
"""

import sys
import numpy as np
import matplotlib

print("Python: ", sys.version)
print("Numpy: ", np.__version__)
print("Matplotlib: ", matplotlib.__version__)

#Coding three neuron layers with different input layers
#Matrix of size 3 * 4
X = [[1, 2, 3, 2.5],
     [2, 5, -1, 2],
     [-1.5, 2.7, 3.3, -0.8]]

np.random.seed(0)

#Modeling Dense layers as a class
class Layer_Dense: 
  def __init__(self, n_inputs, n_neurons):
    self.weights = 0.1 * np.random.randn(n_inputs, n_neurons)       
    self.biases =  np.zeros((1, n_neurons))
  def forward(self, inputs):
    self.outputs = np.dot(inputs, self.weights) + self.biases

layer1 = Layer_Dense(4,5)
layer1.forward(X)
layer2 = Layer_Dense(5,2)
layer2.forward(layer1.outputs)
print(layer2.outputs)



